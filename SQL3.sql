use sakila;

-- ------------------------------------------------------------------BASIC AGGEGATE FUNCTIONS----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- Question 1:
 -- Retrieve the total number of rentals made in the Sakila database.
 -- Hint: Use the COUNT() function.
 
 SELECT COUNT(*) AS total_rentals
FROM rental;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 2:
 -- Find the average rental duration (in days) of movies rented from the Sakila database.
 -- Hint: Utilize the AVG() function.
 
 SELECT AVG(DATEDIFF(return_date, rental_date)) AS avg_rental_days
FROM rental
WHERE return_date IS NOT NULL;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- String Functions:
 
 -- Question 3:
 -- Display the first name and last name of customers in uppercase.
 -- Hint: Use the UPPER () function.
 
 SELECT UPPER(first_name) AS first_name, UPPER(last_name) AS last_name
FROM customer;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 4:
 -- Extract the month from the rental date and display it alongside the rental ID.
 -- Hint: Employ the MONTH() function.
 
 SELECT rental_id, MONTH(rental_date) AS rental_month
FROM rental;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- GROUP BY:
 
 -- Question 5:
 -- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
 -- Hint: Use COUNT () in conjunction with GROUP BY.
 
 SELECT customer_id, COUNT(*) AS rental_count
FROM rental
GROUP BY customer_id;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 6:
 -- Find the total revenue generated by each store.
 -- Hint: Combine SUM() and GROUP BY.
 
 SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
INNER JOIN staff st ON s.store_id = st.store_id
INNER JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 7:
 -- Determine the total number of rentals for each category of movies.
 -- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.
 
 SELECT c.name AS category, COUNT(r.rental_id) AS rental_count
FROM category c
INNER JOIN film_category fc ON c.category_id = fc.category_id
INNER JOIN film f ON fc.film_id = f.film_id
INNER JOIN inventory i ON f.film_id = i.film_id
INNER JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY c.name;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 8:
 -- Find the average rental rate of movies in each language.
 -- Hint: JOIN film and language tables, then use AVG () and GROUP BY
 
 SELECT l.name, AVG(f.rental_rate) AS avg_rental_rate
FROM language l
INNER JOIN film f ON l.language_id = f.language_id
GROUP BY l.name;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- ----------------------------------------------------------------------------------------JOINS-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Questions 9 -
 -- Display the title of the movie, customer s first name, and last name who rented it.
 -- Hint: Use JOIN between the film, inventory, rental, and customer tables.
 
 SELECT f.title, c.first_name, c.last_name
FROM film f
INNER JOIN inventory i ON f.film_id = i.film_id
INNER JOIN rental r ON i.inventory_id = r.inventory_id
INNER JOIN customer c ON r.customer_id = c.customer_id;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 10:
 -- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
 -- Hint: Use JOIN between the film actor, film, and actor tables.
 
 SELECT a.first_name, a.last_name
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
INNER JOIN film f ON fa.film_id = f.film_id
WHERE f.title = 'Gone with the Wind';
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 11:
 -- Retrieve the customer names along with the total amount they've spent on rentals.
 -- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.
 
 SELECT c.first_name, c.last_name, SUM(p.amount) AS total_spent
FROM customer c
INNER JOIN payment p ON c.customer_id = p.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 12:
 -- List the titles of movies rented by each customer in a particular city (e.g., 'London').
 -- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY
 
 SELECT c.first_name, c.last_name, f.title
FROM customer c
INNER JOIN address a ON c.address_id = a.address_id
INNER JOIN city ct ON a.city_id = ct.city_id
INNER JOIN rental r ON c.customer_id = r.customer_id
INNER JOIN inventory i ON r.inventory_id = i.inventory_id
INNER JOIN film f ON i.film_id = f.film_id
WHERE ct.city = 'London'
GROUP BY c.first_name, c.last_name, f.title;
 
 -- ------------------------------------------------------------------- Advanced Joins and GROUP BY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
  -- Question 13:
 -- Display the top 5 rented movies along with the number of times they've been rented.
 -- Hint: JOIN film, inventory, and rental tables, then use COUNT () and GROUP BY, and limit the results.
 
 SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film f
INNER JOIN inventory i ON f.film_id = i.film_id
INNER JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 5;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 -- Question 14:
 -- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
 -- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.
 
 SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
INNER JOIN rental r ON c.customer_id = r.customer_id
INNER JOIN inventory i ON r.inventory_id = i.inventory_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT i.store_id) = 2;
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 